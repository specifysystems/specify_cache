openapi: 3.0.3
info:
  title: Syftorium API
  version: 1.1.0.beta
  description: API Specification for Syftorium Server Interactions
  contact:
    email: cjgrady@ku.edu
    name: CJ Grady
    url: http://www.lifemapper.org/
  license:
    name: GPL 3
    url: 'https://www.gnu.org/licenses/gpl-3.0.txt'
servers:
  - url: 'https://notyeti-195.lifemapper.org/api/v1'
    description: Dev server
  - url: 'https://syftorium.org/api/v1'
    description: Base URL for Syftorium services
paths:
#  /data_cleaning:
#    summary: Endpoint for data cleaning services
#  /data_cleaning/occurrences:
#    summary: Endpoint for cleaning occurrences
#    post:
#      summary: POST occurrence data for cleaning
#      description: POST a new occurrence dataset for cleaning
#      operationId: data_cleaning.occurrences.post
#      responses:
#        default:
#          description: Default response
#      tags:
#        - data_cleaning
#  '/data_cleaning/occurrences/{dataset_id}':
#    summary: Endpoint for an occurrence dataset
#    delete:
#      summary: DELETE a cleaned occurrence dataset
#      operationId: data_cleaning.occurrences.dataset.delete
#      responses:
#        default:
#          description: Default response
#      tags:
#        - data_cleaning
#    get:
#      summary: GET the cleaned occurrence dataset
#      operationId: data_cleaning.occurrences.dataset.get
#      responses:
#        default:
#          description: Default response
#      tags:
#        - data_cleaning
#    parameters:
#      - name: dataset_id
#        in: path
#        required: true
#        schema:
#          type: string
  /resolve:
    summary: Endpoint for the Resolver
    get:
      summary: Get metadata about the resolver endpoint
      operationId: resolver.get
      responses:
        200:
          description: Basic status metadata about the resolver
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolver_status'
      tags:
        - resolver
    post:
      summary: Add new identifier entries into the resolver
      operationId: resolver.post
      requestBody:
        description: Identifier records to be added to the resolver
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resolver_post'
      responses:
        204:
          description: Successfully accepted data for inclusion in the resolver
          content:
            application/json:
              schema:
                properties:
                  pattern:
                    type: string
      tags:
        - resolver

  '/resolve/{identifier}':
    summary: Resolvable identifier endpoint
    parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get resolvable identifier information.
      operationId: resolver.object.get
      responses:
        200:
          description: Metadata about the resolvable identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolver_object'
      tags:
        - resolver

  /sp_cache:
    summary: Endpoint for Specify collection caches
    get:
      summary: Get status information about our Specify cache collection holdings
      operationId: sp_cache.get
      responses:
        200:
          description: An overall status of the Specify Cache
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server_status'
      tags:
        - status
  /sp_cache/collection:
    summary: Endpoint for all Specify cache collections
    post:
      summary: Add a new collection
      description: POST a new collection to the Specify cache
      operationId: sp_cache.colection.post
      requestBody:
        description: Information about a new collection to add to the cache
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_collection_post'
            examples:
              example_new_collection:
                $ref: '#/components/examples/example_new_collection'
        required: true
      responses:
        200:
          description: A brief summary of the collection in the cache
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection_status'
              examples:
                example_new_collection:
                  $ref: '#/components/examples/example_new_collection'
      tags:
        - collection
  '/sp_cache/collection/{collection_id}':
    summary: Endpoint for a specific Specify collection
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get collection information
      description: ''
      operationId: sp_cache.collection.collection_id.get
      responses:
        '200':
          description: Collection status
          content:
            application/json:
              examples:
                simple_collection_status:
                  $ref: '#/components/examples/simple_collection_status'
              schema:
                $ref: '#/components/schemas/collection_status'
        default:
          description: Default error sample response
      tags:
        - collection
        - status
    put:
      summary: Add or update collection information for a specific collection id
      description: ''
      operationId: sp_cache.collection.collection_id.put
      requestBody:
        description: Information about a new collection to add to the cache
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_collection_post'
            examples:
              example_new_collection:
                $ref: '#/components/examples/example_new_collection'
        required: true
      responses:
        204:
          description: Collection information updated successfully
        403:
          description: Not authorized to update colleciton information
      security:
        - ApiKeyAuth: []
      tags:
        - collection
  '/sp_cache/collection/{collection_id}/occurrences':
    summary: Endpoint for collection occurrences
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    delete:
      summary: Delete occurrence records from the collection's cache
      description: ''
      operationId: sp_cache.collection.collection_id.occurrences.delete
      responses:
        204:
          description: Deleted the occurrence record, no content to response
        403:
          description: Not authorized to delete this occurrence record
      security:
        - ApiKeyAuth: []
      tags:
        - occurrences
    post:
      summary: Add new occurrence records to the collection's cache
      description: ''
      operationId: sp_cache.collection.collection_id.occurrences.post
      requestBody:
        description: A set of occurrence records to add to the cache
        content:
          application/zip:
            schema:
              type: string
              format: binary
      responses:
        204:
          description: Successfully accepted data for inclusion in the cache
        403:
          description: Not authorized to post data for this collection
      security:
        - ApiKeyAuth: []
      tags:
        - occurrences
    put:
      summary: Update occurrence records to the collection's cache
      description: ''
      operationId: sp_cache.collection.collection_id.occurrences.put
      requestBody:
        description: A set of occurrence records to add to the cache
        content:
          application/zip:
            schema:
              type: string
              format: binary
      responses:
        204:
          description: Successfully accepted data for inclusion in the cache
        403:
          description: Not authorized to post data for this collection
      security:
        - ApiKeyAuth: []
      tags:
        - occurrences
  '/sp_cache/collection/{collection_id}/occurrences/{identifier}':
    summary: Endpoint for specific specimen occurrences
    delete:
      summary: DELETE an occurrence record from a collection's cache
      operationId: sp_cache.collection.collection_id.occurrences.identifier.delete
      responses:
        204:
          description: Successfully deleted the record
        403:
          description: Not authorized to delete the record
      security:
        - ApiKeyAuth: []
      tags:
        - specimen
    get:
      summary: GET an occurrence record from a collection's cache
      operationId: sp_cache.collection.collection_id.occurrences.identifier.get
      responses:
        200:
          description: A JSON representation of the occurrence record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/occurrence'
      tags:
        - specimen
    put:
      summary: PUT an occurrence record from a collection's cache
      operationId: sp_cache.collection.collection_id.occurrences.identifier.put
      requestBody:
        description: Updated data that should replace existing cached occurrence record
        content:
          application/json:
            schema:
              type: object
      responses:
        204:
          description: Successfully updated the record
        403:
          description: Not authorized to delete the record
      security:
        - ApiKeyAuth: []
      tags:
        - specimen
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string

  /syft:
    summary: Metadata endpoint describing Syftorium holdings
    get:
      responses:
        200:
          description: Overall Syftorium metadata
          content:
            application/json:
              schema:
                properties:
                  collections:
                    type: integer
                  species:
                    type: integer
                  specimens:
                    type: integer
      tags:
        - metadata

  /syft/collections:
    summary: Metadata endpoint for Syftorium collection holdings
    get:
      responses:
        200:
          description: Simple metadata about Syftorium collections
          content:
            application/json:
              schema:
                properties:
                  collections:
                    type: integer
      tags:
        - collection
        - metadata

  /syft/collections/{collection_id}:
    summary: Base endpoint for collection information in the Syftorium
    get:
      parameters:
        - in: path
          name: collection_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: Top level collection metadata
          content:
            application/json:
              schema:
                properties:
                  collection_id:
                    type: string
                  name:
                    type: string
                  metrics:
                    type: object
                    properties:
                      num_specimens:
                        type: integer
                      num_taxa:
                        type: integer
                      phylogenetic_diversity:
                        type: number
                        description: A metric measuring how closely related the taxa are in this collection
                      mean_nearest_taxon_distance:
                        type: number
                        description: A metric measuring how closely related the taxa are in this collection
                      mean_pairwise_distance:
                        type: number
                        description: A metric measuring how closely related the taxa are in this collection
                      range_size:
                        description: The number of unique sites where this collection has specimens
                        type: integer
      tags:
        - collection
        - metadata
        - syftorium

  /syftorium/collections/{collection_id}/maps:
    summary: Endpoint describing maps available for the collection
    get:
      parameters:
        - in: path
          name: collection_id
          schema:
            type: string
          required: true
        - in: query
          name: service
          required: true
          schema:
            type: string
            enum: ["wms"]
            default: "wms"
        - in: query
          name: version
          required: true
          schema:
            type: string
            enum: ["1.3.0"]
            default: "1.3.0"
        - in: query
          name: request
          required: true
          schema:
            type: string
            enum: ["getcapabilities", "getmap"]
        - in: query
          name: layers
          schema:
            type: string
        - in: query
          name: styles
          schema:
            type: string
        - in: query
          name: crs
          schema:
            type: string
        - in: query
          name: bbox
          schema:
            type: string
        - in: query
          name: width
          schema:
            type: integer
        - in: query
          name: height
          schema:
            type: integer
        - in: query
          name: format
          schema:
            type: string
        - in: query
          name: bgcolor
          schema:
            type: string
        - in: query
          name: transparent
          schema:
            type: string
            enum: ["true", "false"]
          required: false
        - in: query
          name: exceptions
          schema:
            type: string
          
      responses:
        200:
          description: Map type listings
          content:
            application/xml:
              schema:
                type: object
                properties:
                  WMS_Capabilities:
                    type: object
                    properties:
                      version:
                        type: string
                        xml:
                          attribute: true
                      schemaLocation:
                        type: string
                        xml:
                          attribute: true
                      Service:
                        type: object
                        properties:
                          Name:
                            type: string
                            default: WMS
                          Title:
                            type: string
                          Abstract:
                            type: string
                          KeywordList:
                            type: array
                            items:
                              type: string
                          OnlineResource:
                            type: object
                            properties:
                              type:
                                type: string
                                xml:
                                  attribute: true
                              href:
                                type: string
                                xml:
                                  attribute: true
            image/*:
              schema:
                type: string
                format: binary
      tags:
        - collection
        - map
        - ogc

  /syftorium/collections/{collection_id}/plots:
    summary: Metadata endpoint describing the plot options for a collection
    get:
      parameters:
        - in: path
          name: collection_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: Plot type listings
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    plot_type:
                      type: string
                    description:
                      type: string
      tags:
        - collection
        - plot
        - metadata

  /syftorium/collections/{collection_id}/plots/climate:
    get:
      parameters:
        - in: path
          name: collection_id
          schema:
            type: string
          required: true
      responses:
        200:
          description: Collection climate space distribution plots
          content:
            application/json:
              schema:
                type: object
                properties:
                  layers:
                    type: array
                    items:
                      properties:
                        name:
                          type: string
                        description:
                          type: string
      tags:
        - collection
        - plot
        - climate

  /syftorium/collections/{collection_id}/plots/climate/{climate_layer_1}:
    get:
      parameters:
        - in: path
          name: collection_id
          schema:
            type: string
          required: true
        - in: path
          name: climate_layer_1
          schema:
            type: string
          required: true
      responses:
        200:
          description: Collection climate space histogram for climate variable
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  variable:
                    type: string
                  y_label:
                    type: string
                  x_label:
                    type: string
                  bins:
                    type: array
                    items:
                      type: object
                      properties:
                        bin_min:
                          type: number
                        bin_max:
                          type: number
                        count:
                          type: integer
            image/*:
              schema:
                type: string
                format: binary
      tags:
        - collection
        - plot
        - climate

  /syftorium/collections/{collection_id}/plots/climate/{climate_layer_1}/{climate_layer_2}:
    get:
      parameters:
        - in: path
          name: collection_id
          schema:
            type: string
          required: true
        - in: path
          name: climate_layer_1
          schema:
            type: string
          required: true
        - in: path
          name: climate_layer_2
          schema:
            type: string
          required: true
      responses:
        200:
          description: Collection climate space scatter plot for two variables
      tags:
        - collection
        - plot
        - climate
  /syftorium/rankings:
    summary: Endpoint for rankings information
    get:
      responses:
        200:
          description: Available statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    statistic:
                      type: string
                    description:
                      type: string
      tags:
        - collection
        - ranking
        - metadata
  /syftorium/rankings/{statistic}:
    summary: Get collection rankings for a statistic
    get:
      parameters:
        - in: path
          name: statistic
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ranks
          content:
            application/json:
              schema:
                properties:
                  statistic:
                    type: string
                  description:
                    type: string
                  ranks:
                    type: array
                    items:
                      properties:
                        collection_id:
                          type: string
                        collection_name:
                          type: string
      tags:
        - collection
        - ranking

  /syftorium/species:
    summary: Metadata about species endpoint
    get:
      responses:
        200:
          description: Metadata about species holdings in the Syftorium
  /syftorium/species/{species_name}:
    summary: Metadata about a species
    get:
      parameters:
        - in: path
          name: species_name
          required: true
          schema:
            type: string
      responses:
        200:
          description: Metadata about a specific species
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  
  /syftorium/species/{species_name}/maps:
    summary: Metadata about a species
    get:
      parameters:
        - in: path
          name: species_name
          required: true
          schema:
            type: string
      responses:
        200:
          description: Metadata about a specific species
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  
  /syftorium/species/{species_name}/plots:
    summary: Metadata about a species
    get:
      parameters:
        - in: path
          name: species_name
          required: true
          schema:
            type: string
      responses:
        200:
          description: Metadata about a specific species

  /syftorium/species/{species_name}/plots/climate:
    summary: Metadata about a species climate plots
    get:
      parameters:
        - in: path
          name: species_name
          required: true
          schema:
            type: string
      responses:
        200:
          description: Metadata about a specific species

  /syftorium/species/{species_name}/plots/climate/{climate_layer_1}:
    summary: Metadata about a species climate plots
    get:
      parameters:
        - in: path
          name: species_name
          required: true
          schema:
            type: string
        - in: path
          name: climate_layer_1
          required: true
          schema:
            type: string
        - in: query
          description: Highlight specimen points for this collection
          name: collection_id
          required: false
          schema:
            type: string
        - in: query
          description: Highlight this particular specimen guid
          name: guid
          required: false
          schema:
            type: string
      responses:
        200:
          description: Metadata about a specific species

  /syftorium/species/{species_name}/plots/climate/{climate_layer_1}/{climate_layer_2}:
    summary: Metadata about a species climate plots
    get:
      parameters:
        - in: path
          name: species_name
          required: true
          schema:
            type: string
        - in: path
          name: climate_layer_1
          required: true
          schema:
            type: string
        - in: path
          name: climate_layer_2
          required: true
          schema:
            type: string
        - in: query
          description: Highlight specimen points for this collection
          name: collection_id
          required: false
          schema:
            type: string
        - in: query
          description: Highlight this particular specimen guid
          name: guid
          required: false
          schema:
            type: string
      responses:
        200:
          description: Metadata about a specific species
          content:
            application/json:
              schema:
                required: [title, x_axis, y_axis, values]
                properties:
                  title:
                    type: string
                  x_axis:
                    type: string
                  y_axis:
                    type: string
                  values:
                    type: array
                    items:
                      properties:
                        x_val:
                          type: number
                        y_val:
                          type: number
                  highlight_values:
                    type: array
                    items:
                      properties:
                        x_val:
                          type: number
                        y_val:
                          type: number
                  guid_value:
                    type: object
                    properties:
                      x_val:
                        type: number
                      y_val:
                        type: number
            image/*:
              schema:
                type: string
                format: binary


  /syftorium/species/{species_name}/rankings:
    summary: Metadata about a species
    get:
      parameters:
        - in: path
          name: species_name
          required: true
          schema:
            type: string
      responses:
        200:
          description: List available rankings metrics

  /syftorium/species/{species_name}/rankings/{statistic}:
    summary: Metadata about a species
    get:
      parameters:
        - in: path
          name: species_name
          required: true
          schema:
            type: string
        - in: path
          name: statistic
          required: true
          schema:
            type: string
      responses:
        200:
          description: List available rankings metrics

  /syftorium/specimens:
    summary: Specimen holdings endpoint
    get:
      responses:
        200:
          description: Metadata about the specimen holdings in the Syftorium
      tags:
        - specimen
        - metadata

  /syftorium/specimens/{specimen_guid}:
    summary: Endpoint for specimen assessment
    get:
      parameters:
        - in: path
          name: specimen_guid
          required: true
          schema:
            type: string
      responses:
        200:
          description: Analysis information about a specimen
          content:
            application/json:
              schema:
                properties:
                  guid:
                    type: string
                  collection_id:
                    type: string
                  species_name:
                    type: string
                  latitude:
                    type: number
                  longitude:
                    type: number
                  climate_values:
                    type: array
                    items:
                      properties:
                        variable:
                          type: string
                        value:
                          type: number
                        z_score:
                          type: number
                  mahalanobis:
                    type: number
      tags:
        - specimen

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  examples:
    example_new_collection:
      value:
        collection_name: Fish Tissue Collection
        institution_name: University of Kansas
        collection_id: ku_fish_tissue
        collection_location: 'Lawrence, Kansas USA'
        contact_email: fish_collection@example.com
        contact_name: Fish Contact
        public_key: COLLECTION PUBLIC KEY

    simple_collection_status:
      value:
        collection_name: Fish Tissue Collection
        institution_name: University of Kansas
        collection_id: ku_fish_tissue
        collection_location: 'Lawrence, Kansas USA'
        contact_email: fish_collection@example.com
        contact_name: Fish Contact
        record_count: 23423

  schemas:
    collection_status:
      description: A brief summary of the collection in the cache
      properties:
        collection_name:
          type: string
        institution_name:
          type: string
        collection_id:
          type: string
        record_count:
          type: integer
        last_updated:
          type: string
          format: date-time
        collection_location:
          type: string
        contact_email:
          type: string
        contact_name:
          type: string
    contact:
      type: object
    locality:
      type: object
    new_collection_post:
      description: Schema for a new collection POST request
      properties:
        collection_name:
          type: string
        institution_name:
          type: string
        collection_id:
          type: string
        collection_location:
          type: string
        contact_email:
          type: string
        contact_name:
          type: string
        public_key:
          type: string
    occurrence:
      type: object
    resolver_object:
      type: object
      properties:
        id:
          type: string
        dataset_guid:
          type: string
        who:
          type: string
        what:
          type: string
        when:
          type: string
        where:
          type: string
        url:
          type: string
    resolver_post:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          dataset_guid:
            type: string
          who:
            type: string
          what:
            type: string
          when:
            type: string
          url:
            type: string
    resolver_status:
      type: object
      properties:
        count:
          description: The number of documents indexed by the resolver
          type: integer
    server_status:
      type: object
      properties:
        num_collections:
          description: Number of collections in the cache
          type: integer
        num_records:
          description: Number of records in the cache
          type: integer
        status:
          description: A brief status of the cache / server
          type: string
